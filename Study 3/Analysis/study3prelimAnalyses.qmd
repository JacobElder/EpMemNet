---
title: "study2finalAnalyses"
format: html
editor: visual
---

```{r}
library(groundhog)

pkgs <-  c("tidyverse","here", "lmerTest", "sjPlot","broom.mixed", "kableExtra", "ggeffects", "gt", "brms", "bayestestR","ggdist", "pheatmap", "heatmaply","pheatmap","gplots","RColorBrewer", "tm", "wordcloud", "psych", "wesanderson","patchwork", "broom.mixed", "dplyr", "gtsummary")
groundhog.day <- '2022-07-25'
#groundhog.library(pkgs, groundhog.day)
pacman::p_load("tidyverse","here", "lmerTest", "sjPlot","broom.mixed", "kableExtra", "ggeffects", "gt", "brms", "bayestestR","ggdist", "pheatmap", "heatmaply","pheatmap","gplots","RColorBrewer", "tm", "wordcloud", "psych", "wesanderson","patchwork", "broom.mixed", "dplyr", "gtsummary","ordinal","r2glmm")
i_am("EpMemNet.Rproj")

devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/corToOne.R")
devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/plotCommAxes.R")
devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/named.effects.ref.R")

CLong <- arrow::read_parquet(here("Study 3","Data", "longEpMNetC3.parquet"))
CShort <- arrow::read_parquet(here("Study 3","Data","shortEpMNetC3.parquet"))
ALong <- arrow::read_parquet(here("Study 3","Data", "longEpMNetA3.parquet"))
AShort <- arrow::read_parquet(here("Study 3","Data","shortEpMNetA3.parquet"))
rankData <- arrow::read_parquet(here("Study 3","Data","rankings3.parquet"))
CLong$subID <- as.numeric(CLong$subID)
CLong$Simulate <- as.factor(CLong$Simulate)
levels(CLong$Simulate) <- list("Keep"  = "1", "Remove" = "2", "Substitute" = "3")
ALong$subID <- as.numeric(ALong$subID)
ALong$Simulate <- as.factor(ALong$Simulate)
levels(ALong$Simulate) <- list("Keep"  = "1", "Remove" = "2", "Substitute" = "3")

fullSimDf <- arrow::read_parquet(here("Study 3","Data", "simEpMNet3.parquet"))
CData <- CLong %>% full_join(CShort, by = c("subID"))
CData$subID <- as.factor(CData$subID)
AData <- ALong %>% full_join(AShort, by = c("subID"))
AData$subID <- as.factor(AData$subID)

# pal1 <-n colorRampPalette(brewer.pal(11,"BrBG"))(227)

CData <- CData %>% select(subID, memCode, outdegree, strengthOut, numID, IM:nwords) %>% rename(degree = outdegree, strength = strengthOut) %>% mutate(Condition = "C")
AData <- AData %>% select(subID, memCode, degree, strength, numID, IM:nwords) %>% mutate(Condition = "A")
fullData <- rbind(CData, AData)
indDiffs <- rbind(AShort, CShort)
fullData <- fullData %>% select(-numID)
fullData <- merge(fullData, indDiffs, by = "subID")

pal <- colorRampPalette(wes_palette("Zissou1", 5))(length(unique(fullData$subID)))

fullSimDf$subID <- as.factor(fullSimDf$subID)
fullSimDf <- fullData %>% select(subID, Condition) %>% right_join(fullSimDf, by = "subID")
```

# Outdegree vs. Associativist

## Importance

```{r}
m<-lmer( scale(IM) ~  scale(degree)*Condition*scale(positive) + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(IM) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Controllability

```{r}
m<-lmer( scale(Control) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Control) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Knowability

```{r}
m<-lmer( scale(Know) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Know) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Taught

```{r}
m<-lmer( scale(Taught) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Taught) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Breadth

```{r}
m<-lmer( scale(Breadth) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Breadth) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Stability

```{r}
m<-lmer( scale(Stability) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Stability) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Locus

```{r}
m<-lmer( scale(Locus) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Locus) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Easy to Recall

```{r}
m<-lmer( scale(Easy) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Easy) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Clear

```{r}
m<-lmer( scale(Clear) ~  scale(degree)*Condition + numID  + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Clear) ~  scale(strength)*Condition + numID  + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Expected

```{r}
m<-lmer( scale(Expect) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Expect) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Simulate

```{r}
m<-glmer( degree ~  Simulate*Condition + numID + ( Simulate | subID), data=fullData, family = poisson())
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Simulate","Condition")) %>% plot()

m<-lmer( strength ~  Simulate*Condition + numID + ( Simulate | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Simulate","Condition")) %>% plot()
```

## Fundamental

```{r}
m<-lmer( scale(Fund) ~  scale(degree) * Condition + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Fund) ~  scale(strength) * Condition + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Representative

```{r}
m<-lmer( scale(Rep) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Rep) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Change

```{r}
m<-lmer( scale(Chan) ~  scale(degree) * Condition  + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Chan) ~  scale(strength) * Condition  + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Positive

```{r}
m<-lmer( scale(positive) ~  scale(degree) * Condition  + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(positive) ~  scale(strength) * Condition  + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Negative

```{r}
m<-lmer( scale(negative) ~  scale(degree) * Condition  + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(negative) ~  scale(strength) * Condition  + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

# Indegree vs Associativist

```{r}
CLong <- arrow::read_parquet(here("Study 3","Data", "longEpMNetC3.parquet"))
CShort <- arrow::read_parquet(here("Study 3","Data","shortEpMNetC3.parquet"))
ALong <- arrow::read_parquet(here("Study 3","Data", "longEpMNetA3.parquet"))
AShort <- arrow::read_parquet(here("Study 3","Data","shortEpMNetA3.parquet"))
rankData <- arrow::read_parquet(here("Study 3","Data","rankings3.parquet"))
CLong$subID <- as.numeric(CLong$subID)
CLong$Simulate <- as.factor(CLong$Simulate)
levels(CLong$Simulate) <- list("Keep"  = "1", "Remove" = "2", "Substitute" = "3")
ALong$subID <- as.numeric(ALong$subID)
ALong$Simulate <- as.factor(ALong$Simulate)
levels(ALong$Simulate) <- list("Keep"  = "1", "Remove" = "2", "Substitute" = "3")

fullSimDf <- arrow::read_parquet(here("Study 3","Data", "simEpMNet3.parquet"))
CData <- CLong %>% full_join(CShort, by = c("subID"))
CData$subID <- as.factor(CData$subID)
AData <- ALong %>% full_join(AShort, by = c("subID"))
AData$subID <- as.factor(AData$subID)

CData <- CData %>% select(subID, memCode, indegree, strengthIn, numID, IM:nwords) %>% rename(degree = indegree, strength = strengthIn) %>% mutate(Condition = "C")
AData <- AData %>% select(subID, memCode, degree, strength, numID, IM:nwords) %>% mutate(Condition = "A")
fullData <- rbind(CData, AData)
indDiffs <- rbind(AShort, CShort)
fullData <- fullData %>% select(-numID)
fullData <- merge(fullData, indDiffs, by = "subID")

pal <- colorRampPalette(wes_palette("Zissou1", 5))(length(unique(fullData$subID)))

fullSimDf$subID <- as.factor(fullSimDf$subID)
fullSimDf <- fullData %>% select(subID, Condition) %>% right_join(fullSimDf, by = "subID")
```

## Importance

```{r}
m<-lmer( scale(IM) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(IM) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Controllability

```{r}
m<-lmer( scale(Control) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Control) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Knowability

```{r}
m<-lmer( scale(Know) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Know) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Taught

```{r}
m<-lmer( scale(Taught) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Taught) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Breadth

```{r}
m<-lmer( scale(Breadth) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Breadth) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Stability

```{r}
m<-lmer( scale(Stability) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Stability) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Locus

```{r}
m<-lmer( scale(Locus) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Locus) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Easy to Recall

```{r}
m<-lmer( scale(Easy) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Easy) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Clear

```{r}
m<-lmer( scale(Clear) ~  scale(degree)*Condition + numID  + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Clear) ~  scale(strength)*Condition + numID  + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Expected

```{r}
m<-lmer( scale(Expect) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
summary(m)
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Expect) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
summary(m)
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Simulate

```{r}
m<-glmer( degree ~  Simulate*Condition + numID + ( Simulate | subID), data=fullData, family = poisson())
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Simulate","Condition")) %>% plot()

m<-lmer( strength ~  Simulate*Condition + numID + ( Simulate | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Simulate","Condition")) %>% plot()
```

## Fundamental

```{r}
m<-lmer( scale(Fund) ~  scale(degree) * Condition + numID + scale(positive) + scale(negative) + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Fund) ~  scale(strength) * Condition + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Representative

```{r}
m<-lmer( scale(Rep) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Rep) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Change

```{r}
m<-lmer( scale(Chan) ~  scale(degree) * Condition  + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(Chan) ~  scale(strength) * Condition  + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Positive

```{r}
m<-lmer( scale(positive) ~  scale(degree) * Condition  + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(positive) ~  scale(strength) * Condition  + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

## Negative

```{r}
m<-lmer( scale(negative) ~  scale(degree) * Condition  + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("degree","Condition")) %>% plot()

m<-lmer( scale(negative) ~  scale(strength) * Condition  + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("strength","Condition")) %>% plot()
```

```{r}
fullData <- data.frame(
  subID=c(CData$subID,AData$subID), 
           Breadth=c(CData$Breadth, AData$Breadth),
           Deg=c(CData$outdegree, AData$degree),
           numID=c(CData$numID, AData$numID),
           Condition=c(rep("C",nrow(CData)), rep("A",nrow(AData))) )

m<-lmer( scale(Breadth) ~  scale(Deg)*Condition + numID + ( scale(Deg) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

```{r}
fullData <- data.frame(
  subID=c(CData$subID,AData$subID), 
           Breadth=c(CData$Breadth, AData$Breadth),
           Streng=c(CData$strengthOut, AData$strength),
           numID=c(CData$numID, AData$numID),
           Condition=c(rep("C",nrow(CData)), rep("A",nrow(AData))) )

m<-lmer( scale(Breadth) ~  scale(Streng)*Condition + numID + ( scale(Streng) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

```{r}
fullData <- data.frame(
  subID=c(CData$subID,AData$subID), 
           Chan=c(CData$Chan, AData$Chan),
           Deg=c(CData$outdegree, AData$degree),
           numID=c(CData$numID, AData$numID),
           Condition=c(rep("C",nrow(CData)), rep("A",nrow(AData))) )
m<-lmer( scale(Chan) ~  scale(Deg)*Condition + numID + ( scale(Deg) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

```{r}
m<-lmer( scale(Initiate) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

```{r}
m<-lmer( scale(Initiate) ~  scale(strength)*Condition + numID + ( scale(strength) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

# Similar Traits Predict Similar Ratings

## Knowability

```{r}
m<-lmer( scale(Know) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Sim","Condition")) %>% plot()
```

### Positivity

```{r}
m<-lmer( scale(positive) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Sim","Condition")) %>% plot()
```

### Negative

```{r}
m<-lmer( scale(negative) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
```

### Easy

```{r}
m<-lmer( scale(Easy) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
```

### Fundamental

```{r}
m<-lmer( scale(Fund) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Sim","Condition")) %>% plot()
```

### Changed Me

```{r}
m<-lmer( scale(Chan) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Sim","Condition")) %>% plot()
```

### Taught Me

```{r}
m<-lmer( scale(Taught) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Sim","Condition")) %>% plot()
```

### Expected

```{r}
m<-lmer( scale(Expect) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Sim","Condition")) %>% plot()
```

```{r}
m<-lmer( scale(IM) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Sim","Condition")) %>% plot()
```

```{r}
m<-lmer( scale(Rep) ~  scale(Sim)*Condition + ( scale(Sim) | subID), data=fullSimDf)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Sim","Condition")) %>% plot()
```

## 10.) broad traits have more outdegree

Supported

```{r}
m<-lmer( scale(Breadth) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Breadth) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## 9.) Outdegree predicts not knowing what experience would be like. (epistemic)

More indegree that outdegree actually

```{r}
m<-lmer( scale(Know) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Know) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## 10.) Outdegree predicts showing/teaching something new.

```{r}
m<-lmer( scale(Taught) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Taught) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## 11.) We do not have strong predictions about controllability.

Indegree predicts controllability

```{r}
m<-lmer( scale(Control) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Control) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## 12.) Outdegree central traits will be ranked more epistemically and personally transformative.

```{r}
rankDataRET <- merge(rankData, fullData, by.x = c("subID","RET"), by.y=c("subID","memCode"),all=T)
rankDataRET$Rank[is.na(rankDataRET$Rank)] <- "Rest"
summedRET <- Rmisc::summarySE(measurevar = "degree", groupvars = c("Rank","Condition"), na.rm=T, data= rankDataRET)

ggplot(data=summedRET, aes(x=Rank, y=outdegree)) +
  geom_bar(stat="identity", fill="steelblue") + ggtitle("Epistemic Transformation Rankings")

rankDataRPT <- merge(rankData, fullData, by.x = c("subID","RPT"), by.y=c("subID","memCode"),all=T)
rankDataRPT$Rank[is.na(rankDataRPT$Rank)] <- "Rest"
summedRPT <- Rmisc::summarySE(measurevar = "degree", groupvars = c("Rank","Condition"), na.rm=T, data= rankDataRPT)

ggplot(data=summedRPT, aes(x=Rank, y=degree, color=Condition)) +
  geom_bar(stat="identity", fill="steelblue") + ggtitle("Personal Transformation Rankings")

ggplot(summedRPT, aes(x=Rank, y=degree, fill=Condition)) +
    geom_bar(stat='identity', position='dodge')
```

## 13.) Outdegree predicts how surprising/unexpected

Stronger effect for indegree actually

```{r}
m<-lmer( scale(Expect) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Expect) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## 14.) Outdegree predicts more stable memories.

Lower indegree technically predicts more stability but neither is a particularly strong effect.

```{r}
m<-lmer( scale(Stability) ~  scale(degree)*Condition + numID + ( scale(degree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Stability) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## 15.) Outdegree predicts memories that were more caused by self than others, whereas indegree predicts memories more caused by others than self.

Interesting dissociation... Lower indegree, more social/others. Higher outdegree more self/less others.

```{r}
fullData$SOf <- ordered(fullData$SO)
ordinal_model <- clmm(SOf ~ scale(outdegree) + scale(indegree) + numID +
                        ( scale(outdegree) + scale(indegree) | subID), data=fullData)
summary(ordinal_model)

ordinal_model <- clmm(SOf ~ scale(strengthIn) + scale(strengthOut) + numID +
                        ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
summary(ordinal_model)
```

## 16.) Outdegree predicts events within or for someone, rather than pertaining to others.

Indegree predicts pertaining to others

```{r}
m<-lmer( scale(Locus) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Locus) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

# Exploratory:

## Self-Initiated

Higher outdegree more self-initiated, higher indegree more other initiated

```{r}
m<-lmer( scale(Initiate) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Initiate) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## Simulation on Indegree

Memories you want to remove are lower in indegree

```{r}
contrasts(fullLong$Simulate) <- contr.sum(3)
m<-glmer( indegree ~  Simulate + numID + ( Simulate | subID), data=fullData, family=poisson())
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Simulate")) %>% plot()
```

## Simulation on outdegree

Memories you want to remove are lower in outdegree

```{r}
contrasts(fullLong$Simulate) <- contr.sum(3)
m<-glmer( outdegree ~  Simulate + numID + ( Simulate | subID), data=fullData, family=poisson())
tbl_regression(m) %>% as_gt()
ggpredict(m, c("Simulate")) %>% plot()
```

### Simulate \* Positive on Outdegree

If you want to remove a memory and it's higher outdegree, it's more positive. If you want to substitute a memory and it's higher outdegree, it's less positive.

```{r}
m<-lmer( positive ~  outdegree*Simulate + numID + ( Simulate | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("outdegree","Simulate")) %>% plot()
```

### Simulate \* Indegree on Know

If it's a memory you want to substitute and it has more inward causes, it was less knowable prior to happening.

```{r}
m<-lmer( Know ~  indegree*Simulate + numID + ( Simulate | subID), data=fullData)
tbl_regression(m) %>% as_gt()
ggpredict(m, c("indegree","Simulate")) %>% plot()
```
